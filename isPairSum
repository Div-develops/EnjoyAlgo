import java.util.Arrays;

public class PairSum {
    public static void main(String[] args) {
        int[]arr={-5,1,-40,20,6,8,7};
        System.out.println(ifPairExists(arr,arr.length,14));
    }

    public static boolean ifPairExists(int[]arr,int n,int targetSum){
        for(int i=0;i<=n-2;i++){
            for(int j=i;j<=n-1;j++){
                if(arr[i]+arr[j]==targetSum){
                    return true;
                }
            }
        }
        return false;
    }

    public static boolean binaryApproach(int[]arr,int n,int targetSum){
        Arrays.sort(arr);
        for(int i=0;i<n;i++){
            if(binarySearch(arr,targetSum-arr[i])){
                return true;
            };
        }
        return false;
    }

    public static boolean binarySearch(int[]arr,int targetElement){
        int start=0;
        int end=arr.length-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(mid==targetElement){
                return true;
            } else if (mid>targetElement) {
                end = mid-1;
            }
            else{
                start = mid+1;
            }
        }
        return false;
    }

    public static boolean twoPointerApproach(int[]arr,int n,int targetSum){
        Arrays.sort(arr);
        int i=0;
        int j=n-1;
        /* i<j as one element can't be a pair*/
        while(i<j){
            if(arr[i]+arr[j]==targetSum){
                return true;
            }
            else if(arr[i]+arr[j]>targetSum){
                j--;
            }
            else{
                i++;
            }
        }
        return false;
    }
}
