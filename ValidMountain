public class ValidMountain {
    public static void main(String[] args) {
        int[]arr={1,2,3};
        System.out.println(validMountainBothSide(arr, arr.length));
    }

    public static boolean mountainArrayBruteForce(int[]arr,int n){
        if(n<3)return false;
        int count = 0;
        for(int i=1;i<n-1;i++){
            if(arr[i]>arr[i+1] && arr[i]>arr[i-1]){
                count++;
            }
        }

        return count==1;
    }

    //travelling from one side only
    public static boolean mountainArrayOneSide(int[]arr,int n){
        if(n<3)return false;

        int i=0;
        while(i<n-1 && arr[i+1]>arr[i]){
            i++;
            if(i==n-1)return false;
        }
        while(i<n-1 && arr[i+1]<arr[i]){
            i++;
        }

        return i==n-1;
    }

    //travelling from both right and left end
    public static boolean validMountainBothSide(int[]arr,int n){
        if(n<3)return false;
        int left=0,right=n-1;
        int peaki=-1;
        int peakj=-2;
        while(left<n-1){
            if(arr[left+1]<arr[left]){
                peaki=left;
            }
            left++;
        }
        while(right>0){
            if(arr[right-1]<arr[right]){
                peakj=right;
            }
            right--;
        }

        return (peaki==peakj);
    }
}
